{
  "kotlinc_fingerprint": 9708028289500143472,
  "outputs": {
    "17575919397365258319": {
      "success": false,
      "status": "exit status: 255",
      "code": 255,
      "stdout": "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\nUsage: ConsoleLauncher [OPTIONS]\nLaunches the JUnit Platform for test discovery and execution.\n      [@<filename>...]       One or more argument files containing options.\n\nCOMMANDS\n\n  -h, --help                 Display help information.\n      --list-engines         List all observable test engines.\n\nSELECTORS\n\n      --scan-classpath, --scan-class-path[=PATH]\n                             Scan all directories on the classpath or explicit classpath\n                               roots. Without arguments, only directories on the system\n                               classpath as well as additional classpath entries supplied via\n                               -cp (directories and JAR files) are scanned. Explicit classpath\n                               roots that are not on the classpath will be silently ignored.\n                               This option can be repeated.\n      --scan-modules         EXPERIMENTAL: Scan all resolved modules for test discovery.\n  -u, --select-uri=URI       Select a URI for test discovery. This option can be repeated.\n  -f, --select-file=FILE     Select a file for test discovery. This option can be repeated.\n  -d, --select-directory=DIR Select a directory for test discovery. This option can be\n                               repeated.\n  -o, --select-module=NAME   EXPERIMENTAL: Select single module for test discovery. This\n                               option can be repeated.\n  -p, --select-package=PKG   Select a package for test discovery. This option can be repeated.\n  -c, --select-class=CLASS   Select a class for test discovery. This option can be repeated.\n  -m, --select-method=NAME   Select a method for test discovery. This option can be repeated.\n  -r, --select-resource=RESOURCE\n                             Select a classpath resource for test discovery. This option can\n                               be repeated.\n  -i, --select-iteration=TYPE:VALUE[INDEX(..INDEX)?(,INDEX(..INDEX)?)*]\n                             Select iterations for test discovery (e.g. method:com.acme.Foo#m()\n                               [1..2]). This option can be repeated.\n\nFILTERS\n\n  -n, --include-classname=PATTERN\n                             Provide a regular expression to include only classes whose fully\n                               qualified names match. To avoid loading classes unnecessarily,\n                               the default pattern only includes class names that begin with\n                               \"Test\" or end with \"Test\" or \"Tests\". When this option is\n                               repeated, all patterns will be combined using OR semantics.\n                               Default: ^(Test.*|.+[.$]Test.*|.*Tests?)$\n  -N, --exclude-classname=PATTERN\n                             Provide a regular expression to exclude those classes whose fully\n                               qualified names match. When this option is repeated, all\n                               patterns will be combined using OR semantics.\n      --include-package=PKG  Provide a package to be included in the test run. This option can\n                               be repeated.\n      --exclude-package=PKG  Provide a package to be excluded from the test run. This option\n                               can be repeated.\n  -t, --include-tag=TAG      Provide a tag or tag expression to include only tests whose tags\n                               match. When this option is repeated, all patterns will be\n                               combined using OR semantics.\n  -T, --exclude-tag=TAG      Provide a tag or tag expression to exclude those tests whose tags\n                               match. When this option is repeated, all patterns will be\n                               combined using OR semantics.\n  -e, --include-engine=ID    Provide the ID of an engine to be included in the test run. This\n                               option can be repeated.\n  -E, --exclude-engine=ID    Provide the ID of an engine to be excluded from the test run.\n                               This option can be repeated.\n\nRUNTIME CONFIGURATION\n\n      -cp, --classpath, --class-path=PATH\n                             Provide additional classpath entries -- for example, for adding\n                               engines and their dependencies. This option can be repeated.\n      --config=KEY=VALUE     Set a configuration parameter for test discovery and execution.\n                               This option can be repeated.\n\nREPORTING\n\n      --fail-if-no-tests     Fail and return exit status code 2 if no tests are found.\n      --reports-dir=DIR      Enable report output into a specified local directory (will be\n                               created if it does not exist).\n\nCONSOLE OUTPUT\n\n      --disable-ansi-colors  Disable ANSI colors in output (not supported by all terminals).\n      --color-palette=FILE   Specify a path to a properties file to customize ANSI style of\n                               output (not supported by all terminals).\n      --single-color         Style test output using only text attributes, no color (not\n                               supported by all terminals).\n      --disable-banner       Disable print out of the welcome message.\n      --details=MODE         Select an output details mode for when tests are executed. Use\n                               one of: none, summary, flat, tree, verbose. If 'none' is\n                               selected, then only the summary and test failures are shown.\n                               Default: tree.\n      --details-theme=THEME  Select an output details tree theme for when tests are executed.\n                               Use one of: ascii, unicode. Default is detected based on\n                               default character encoding.\n\nFor more information, please refer to the JUnit User Guide at\nhttps://junit.org/junit5/docs/current/user-guide/\n",
      "stderr": "org.junit.platform.commons.JUnitException: TestEngine with ID 'junit-jupiter' failed to discover tests\n\tat org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discoverEngineRoot(EngineDiscoveryOrchestrator.java:160)\n\tat org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discoverSafely(EngineDiscoveryOrchestrator.java:132)\n\tat org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discover(EngineDiscoveryOrchestrator.java:107)\n\tat org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discover(EngineDiscoveryOrchestrator.java:78)\n\tat org.junit.platform.launcher.core.DefaultLauncher.discover(DefaultLauncher.java:110)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)\n\tat org.junit.platform.console.tasks.ConsoleTestExecutor.executeTests(ConsoleTestExecutor.java:66)\n\tat org.junit.platform.console.tasks.ConsoleTestExecutor.lambda$execute$0(ConsoleTestExecutor.java:58)\n\tat org.junit.platform.console.tasks.CustomContextClassLoaderExecutor.invoke(CustomContextClassLoaderExecutor.java:33)\n\tat org.junit.platform.console.tasks.ConsoleTestExecutor.execute(ConsoleTestExecutor.java:58)\n\tat org.junit.platform.console.ConsoleLauncher.executeTests(ConsoleLauncher.java:120)\n\tat org.junit.platform.console.ConsoleLauncher.execute(ConsoleLauncher.java:82)\n\tat org.junit.platform.console.ConsoleLauncher.execute(ConsoleLauncher.java:55)\n\tat org.junit.platform.console.ConsoleLauncher.execute(ConsoleLauncher.java:48)\n\tat org.junit.platform.console.ConsoleLauncher.main(ConsoleLauncher.java:42)\nCaused by: org.junit.platform.commons.JUnitException: ClassSelector [className = 'PrefixTest'] resolution failed\n\tat org.junit.platform.launcher.listeners.discovery.AbortOnFailureLauncherDiscoveryListener.selectorProcessed(AbortOnFailureLauncherDiscoveryListener.java:39)\n\tat org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolveCompletely(EngineDiscoveryRequestResolution.java:103)\n\tat org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.run(EngineDiscoveryRequestResolution.java:83)\n\tat org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolver.resolve(EngineDiscoveryRequestResolver.java:113)\n\tat org.junit.jupiter.engine.discovery.DiscoverySelectorResolver.resolveSelectors(DiscoverySelectorResolver.java:46)\n\tat org.junit.jupiter.engine.JupiterTestEngine.discover(JupiterTestEngine.java:69)\n\tat org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discoverEngineRoot(EngineDiscoveryOrchestrator.java:152)\n\t... 16 more\nCaused by: org.junit.platform.commons.PreconditionViolationException: Could not load class with name: PrefixTest\n\tat org.junit.platform.engine.discovery.ClassSelector.lambda$getJavaClass$0(ClassSelector.java:75)\n\tat org.junit.platform.commons.function.Try$Failure.getOrThrow(Try.java:335)\n\tat org.junit.platform.engine.discovery.ClassSelector.getJavaClass(ClassSelector.java:74)\n\tat org.junit.jupiter.engine.discovery.ClassSelectorResolver.resolve(ClassSelectorResolver.java:66)\n\tat org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.lambda$resolve$2(EngineDiscoveryRequestResolution.java:135)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1602)\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)\n\tat org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolve(EngineDiscoveryRequestResolution.java:189)\n\tat org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolve(EngineDiscoveryRequestResolution.java:126)\n\tat org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolveCompletely(EngineDiscoveryRequestResolution.java:92)\n\t... 21 more\nCaused by: java.lang.ClassNotFoundException: PrefixTest\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.junit.platform.commons.util.ReflectionUtils.lambda$tryToLoadClass$9(ReflectionUtils.java:831)\n\tat org.junit.platform.commons.function.Try.lambda$call$0(Try.java:57)\n\tat org.junit.platform.commons.function.Try.of(Try.java:93)\n\tat org.junit.platform.commons.function.Try.call(Try.java:57)\n\tat org.junit.platform.commons.util.ReflectionUtils.tryToLoadClass(ReflectionUtils.java:794)\n\tat org.junit.platform.commons.util.ReflectionUtils.tryToLoadClass(ReflectionUtils.java:750)\n\t... 36 more\n\n"
    },
    "12490762444037227868": {
      "success": true,
      "status": "",
      "code": 0,
      "stdout": "Kotlin version 1.8.21-release-380 (JRE 19.0.2+7)\n",
      "stderr": ""
    },
    "18402048501020971970": {
      "success": true,
      "status": "",
      "code": 0,
      "stdout": "",
      "stderr": ""
    },
    "4473950344389964404": {
      "success": true,
      "status": "",
      "code": 0,
      "stdout": "",
      "stderr": ""
    },
    "8618350035009659090": {
      "success": true,
      "status": "",
      "code": 0,
      "stdout": "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n",
      "stderr": ""
    },
    "10103420444180635367": {
      "success": true,
      "status": "",
      "code": 0,
      "stdout": "",
      "stderr": ""
    },
    "10287167018252158523": {
      "success": true,
      "status": "",
      "code": 0,
      "stdout": "",
      "stderr": ""
    },
    "17352861761061083651": {
      "success": true,
      "status": "",
      "code": 0,
      "stdout": "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n",
      "stderr": ""
    }
  },
  "successes": {}
}